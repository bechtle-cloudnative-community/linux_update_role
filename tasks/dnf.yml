---
- name: Ensure need-restarting is available
  ansible.builtin.dnf:
    name: dnf-utils
    state: present

# DNF Upgrade task
- name: Update all software (dnf)
  when: not dnf.only_bugfix and not dnf.only_security
  ansible.builtin.dnf:
    name: "*"
    state: latest  # noqa package-latest This role is to update packages.
    update_cache: true
    update_only: true

- name: Update all software (dnf)
  when: dnf.only_bugfix and not dnf.only_security
  ansible.builtin.dnf:
    name: "*"
    state: latest  # noqa package-latest This role is to update packages.
    bugfix: "{{ dnf.only_bugfix }}"
    update_cache: true
    update_only: true

- name: Update all software (dnf)
  when: not dnf.only_bugfix and dnf.only_security
  ansible.builtin.dnf:
    name: "*"
    state: latest  # noqa package-latest This role is to update packages.
    bugfix: "{{ dnf.only_security }}"
    update_cache: true
    update_only: true

- name: Remove packates not needed anymore
  ansible.builtin.dnf:
    autoremove: true

- name: Check to see if we need a reboot
  register: need_reboot_out
  changed_when: '"true" in need_reboot_out.stdout'
  failed_when: need_reboot_out.rc > 1
  ignore_errors: true
  ansible.builtin.shell:
    cmd: needs-restarting -r || echo true

- name: Set reboot Fact
  when: '"true" in need_reboot_out.stdout' 
  ansible.builtin.set_fact:
    system_need_reboot: true